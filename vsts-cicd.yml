# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(major).$(minor).$(Date:yyMM).$(Rev:r)

trigger:
- develop
- master
- users/*

pool:
  vmImage: "windows-2019"

variables:
  "major": '2'
  "minor": '0'
  "BuildConfiguration": 'debug'
  "SolutionAbbreviation": 'gmm'
  disable.coverage.autogenerate: 'true'

stages:

- template: build-services.yml
  parameters:
    repoToCheckout: ''
    checkoutPath: ''

- template: yaml/build-functionapps.yml
  parameters:
    dependsOn: BuildCommon
    condition: succeeded('BuildCommon')
    repoToCheckout: ''
    checkoutPath: ''
    functionApps:
    - function:
       name: 'JobTrigger'
       coverageThreshold: 97
    - function:
       name: 'GraphUpdater'
       coverageThreshold: 44
    - function:
       name: 'SecurityGroup'
       coverageThreshold: 95
    - function:
        name: 'AzureTableBackup'
        coverageThreshold: 96
    - function:
        name: 'AzureUserReader'
        coverageThreshold: 34

- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'int'
    tenantId: $(tenantId)
    keyVaultReaders: $(keyVaultReaders_nonprod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-int'
    dependsOn: BuildFunctions
    stageName: 'int'
    functionApps:
    - name: 'JobTrigger'
    - name: 'GraphUpdater'
    - name: 'SecurityGroup'
    - name: 'AzureTableBackup'
    - name: 'AzureUserReader'
    condition: |
      and(
        succeeded('BuildFunctions'),
        eq(variables['Build.SourceBranch'], 'refs/heads/develop'),
        in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )

- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'ua'
    tenantId: $(tenantId)
    keyVaultReaders: $(keyVaultReaders_nonprod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-ua'
    dependsOn: BuildFunctions
    stageName: 'ua'
    functionApps:
    - name: 'JobTrigger'
    - name: 'GraphUpdater'
    - name: 'SecurityGroup'
    - name: 'AzureTableBackup'
    - name: 'AzureUserReader'
    condition: |
      and(
          succeeded('BuildFunctions'),
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )


- template: yaml/deploy-pipeline.yml
  parameters:
    solutionAbbreviation: '$(SolutionAbbreviation)'
    environmentAbbreviation: 'prodv2'
    tenantId: $(tenantId)
    keyVaultReaders: $(keyVaultReaders_prod)
    location: $(location)
    serviceConnection: '$(SolutionAbbreviation)-serviceconnection-prodv2'
    dependsOn: ua
    stageName: 'production'
    functionApps:
    - name: 'JobTrigger'
    - name: 'GraphUpdater'
    - name: 'SecurityGroup'
    - name: 'AzureTableBackup'
    - name: 'AzureUserReader'
    condition: |
      and(
        succeeded('ua'),
        succeeded('BuildFunctions'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        in(variables['Build.Reason'], 'IndividualCI', 'Manual')
      )
